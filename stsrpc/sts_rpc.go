// Code generated by goctl. DO NOT EDIT.
// Source: sts.proto

package stsrpc

import (
	"context"

	"github.com/xh-polaris/sts-rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	GenCosStsReq     = pb.GenCosStsReq
	GenCosStsResp    = pb.GenCosStsResp
	GenSignedUrlReq  = pb.GenSignedUrlReq
	GenSignedUrlResp = pb.GenSignedUrlResp

	StsRpc interface {
		GenCosSts(ctx context.Context, in *GenCosStsReq, opts ...grpc.CallOption) (*GenCosStsResp, error)
		GenSignedUrl(ctx context.Context, in *GenSignedUrlReq, opts ...grpc.CallOption) (*GenSignedUrlResp, error)
	}

	defaultStsRpc struct {
		cli zrpc.Client
	}
)

func NewStsRpc(cli zrpc.Client) StsRpc {
	return &defaultStsRpc{
		cli: cli,
	}
}

func (m *defaultStsRpc) GenCosSts(ctx context.Context, in *GenCosStsReq, opts ...grpc.CallOption) (*GenCosStsResp, error) {
	client := pb.NewStsRpcClient(m.cli.Conn())
	return client.GenCosSts(ctx, in, opts...)
}

func (m *defaultStsRpc) GenSignedUrl(ctx context.Context, in *GenSignedUrlReq, opts ...grpc.CallOption) (*GenSignedUrlResp, error) {
	client := pb.NewStsRpcClient(m.cli.Conn())
	return client.GenSignedUrl(ctx, in, opts...)
}
